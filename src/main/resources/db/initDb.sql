DROP TABLE user_roles
IF EXISTS;
DROP TABLE menu_items
IF EXISTS;
DROP TABLE votes
IF EXISTS;
DROP TABLE users
IF EXISTS;
DROP TABLE restaurants
IF EXISTS;
DROP SEQUENCE global_seq
IF EXISTS;

CREATE SEQUENCE global_seq
  AS INTEGER
  START WITH 100;

CREATE TABLE users
(
  id       INTEGER GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
  name     VARCHAR(255) NOT NULL,
  email    VARCHAR(255) NOT NULL,
  password VARCHAR(255) NOT NULL,
  enabled BOOLEAN DEFAULT TRUE NOT NULL ,
  registered TIMESTAMP DEFAULT now() NOT NULL
);
CREATE UNIQUE INDEX users_unique_email_idx ON USERS (email);

CREATE TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES users (id)
    ON DELETE CASCADE
);

CREATE TABLE restaurants
(
  id   INTEGER GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
  name VARCHAR(255) NOT NULL
);

CREATE TABLE menu_items
(
  id INTEGER GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
  restaurant_id INTEGER      NOT NULL,
  name          VARCHAR(255) NOT NULL,
  price         INTEGER      NOT NULL,
  CONSTRAINT restaurant_menus_idx UNIQUE (restaurant_id, name),
  FOREIGN KEY (restaurant_id) REFERENCES restaurants (id)
    ON DELETE CASCADE
);

CREATE TABLE votes
(
  id            BIGINT GENERATED BY DEFAULT AS SEQUENCE global_seq PRIMARY KEY,
  restaurant_id INTEGER                 NOT NULL,
  user_id       INTEGER,
  date_time     TIMESTAMP DEFAULT now() NOT NULL,
  FOREIGN KEY (restaurant_id) REFERENCES restaurants (id)
    ON DELETE CASCADE,
  FOREIGN KEY (user_id) REFERENCES users (id)
    ON DELETE CASCADE
);